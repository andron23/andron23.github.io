group_by(month, racket_shuttlecock) %>%
mutate(sold = n()) %>%
ggplot() +
geom_smooth(aes(x = price, y = sold)) +
facet_grid(~racket_shuttlecock)
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n()) %>%
ggplot() +
geom_smooth(method = lm, formula = sold ~ price) +
facet_grid(~racket_shuttlecock)
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n()) %>%
ggplot() +
geom_smooth(aes( x = price, y = sold), method = lm, formula = sold ~ price) +
facet_grid(~racket_shuttlecock)
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n()
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n())
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n()) %>%
ggplot() +
geom_smooth(aes( x = price, y = sold), method = lm +
facet_grid(~racket_shuttlecock)
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n()) %>%
ggplot() +
geom_smooth(aes( x = price, y = sold), method = lm) +
facet_grid(~racket_shuttlecock)
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n()) %>%
ggplot() +
geom_smooth(aes(x = price, y = sold), method = lm, formula = sold ~ price) +
facet_grid(~racket_shuttlecock)
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n()) %>%
ggplot() +
geom_smooth(aes(x = price, y = sold), method = lm, formula = y ~ x) +
facet_grid(~racket_shuttlecock)
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n()) %>%
ggplot() +
geom_smooth(aes(x = price, y = sold, col = racket_shuttlecock), method = lm, formula = y ~ x)
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n()) %>%
ggplot() +
geom_point(aes(x = price, y = sold, col = racket_shuttlecock)) +
geom_smooth(aes(x = price, y = sold, col = racket_shuttlecock), method = lm, formula = y ~ x)
data1 <-
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n())
library(lm)
lm(data = data1, sold ~ price)
fit <- lm(data = data1, sold ~ price)
summary(fit)
qqPlot(fit, simulate = TRUE, main = 'График Q-Q')
qqplot(fit, simulate = TRUE, main = 'График Q-Q')
qqplot(fit)
fit <- lm(data = data1 %>% filter(racket_shuttlecock = "1_2"), sold ~ price)
summary(fit)
data1
fit <- lm(data = data1[-2] %>% filter(racket_shuttlecock = "1_2"), sold ~ price)
summary(fit)
data1[-2] %>% filter(racket_shuttlecock = "1_2")
fit <- lm(data = data1[-2] %>% filter(racket_shuttlecock == "1_2"), sold ~ price)
summary(fit)
qqplot(fit)
predict(fit)
data1[-2] %>% filter(racket_shuttlecock == "1_2")
data %>%
mutate(month = month(date)) %>%
group_by(month, racket_shuttlecock) %>%
mutate(sold = n()) %>%
ggplot() +
geom_point(aes(x = price, y = sold, col = racket_shuttlecock)) +
geom_smooth(aes(x = price, y = sold, col = racket_shuttlecock), method = lm, formula = y ~ x) +
facet_grid(~racket_shuttlecock)
resid(fit)
summary(fit)
resid(fit) %>% min()
resid(fit) %>% max()
resid(fit) %>% median()
qqplot(resid(fit))
qqplot(data1$price, resid(fit))
ggplot(data = data1[-2] %>% filter(racket_shuttlecock == "1_2")) + geom_point(aes(x = price, y = resid(fit)))
shapiro.test(resid(fit))
resid(fit) %>% length()
sample(resid(fit), 5000)
shapiro.test(sample(resid(fit), 5000))
ggplot() + geom_histogram(aes(resid(fit)))
qqnorm(resid(fit))
qqnorm(rnorm(500))
qqnorm(unique(resid(fit)))
library(help = "datasets")
Titanic
str(Titanic)
ChickWeight
co2
iris
plot(data = iris, Sepal.Length ~ Sepal.Width)
mtcars
shiny::runApp('C:/Users/Андрон/Desktop/Liza dip/1')
runApp('C:/Users/Андрон/Desktop/Liza dip/1')
runApp('C:/Users/Андрон/Desktop/Liza dip/1')
runApp('C:/Users/Андрон/Desktop/Liza dip/1')
?par
plot(data = mtcars, hp~cyl)
str(mtcars)
plot(data = mtcars, hp~rownames())
plot(data = mtcars, hp~rownames(mtcars))
plot(data = mtcars, qsec~hp)
cars
data <- co2 %>%
select(Jan)
loibrary(dplyr)
library(dplyr)
loibrary(dplyr)
data <- co2 %>%
select(Jan)
co2 %>%
select(Jan)
co2 %>%
filter(Jan)
co2
str(co2)
as.tibble(co2)
tibble(co2)
tk_tbl(co2)
library(timetk)
ins.tall.packages(timetk)
install.packages(timetk)
install.packages("timetk")
library(timetk)
tk_tbl(co2)
crimtab
discoveries
JohnsonJohnson
str(JohnsonJohnson)
tk_tbl(co2)
library(tidyr)
tk_tbl(co2) %>% separate(index, into = c("mon", "year"))
co2
tk_tbl(co2) %>% separate(index, into = c("mon", "year")) %>% spread(mon, value)
as.Date("авг", format="%m")
as.Date("авг")
as.Date("авг", format = "m")
as.Date("авг", format = "%b")
co2
tk_tbl(co2, timetk_idx = TRUE) %>% separate(index, into = c("mon", "year")) %>% spread(mon, value)
tk_tbl(co2)
tk_tbl(co2) %>% mutate(index = as.Date(index))
tk_tbl(co2) %>% mutate(index = as.Date(index, format = "%b %Y"))
Sys.setlocale(locale = "English")
tk_tbl(co2)
tk_tbl(co2) %>% separate(index, into = c("mon", "year")) %>% spread(mon, value)
tk_tbl(co2)
tk_tbl(co2) %>% separate(index, into = c("mon", "year"))
tk_tbl(co2) %>% separate(index, into = c("mon", "year"), convert = TRUE)
tk_tbl(co2) %>% separate(index, into = c("mon", "year"), extra = "drop")
tk_tbl(co2) %>% separate(index, into = c("mon", as.integer("year")))
tk_tbl(co2) %>% separate(index, into = c("mon", "year")) %>% mutate(mon = as.Date(mon, format = "%b"))
tk_tbl(co2) %>% separate(index, into = c("mon", "year")) %>% mutate(mon = as.Date(mon, format = "b"))
tk_tbl(co2) %>% separate(index, into = c("mon", "year")) %>% mutate(mon = as.Date(mon, format = "%b"))
tk_tbl(co2) %>% separate(index, into = c("mon", "year")) %>% select(mon)
tk_tbl(co2) %>% separate(index, into = c("mon", "year")) %>% select(mon) %>% as.Date()
tk_tbl(co2) %>% separate(index, into = c("mon", "year")) %>% select(mon) %>% as.Date(format = "%b")
tk_tbl(co2) %>% separate(index, into = c("mon", "year")) %>% select(mon) %>% mutate(as.Date(mon, format = "%b"))
tk_tbl(co2) %>% separate(index, into = c("mon", "year")) %>% select(mon) %>% mutate(as.Date(mon))
format("Jan", "%b")
tk_tbl(co2) %>% separate(index, into = c("mon", "year"), sep = " ")
tk_tbl(JohnsonJohnson)
tk_tbl(JohnsonJohnson) %>% separate(index, into = c("year", "quarter"))
tk_tbl(JohnsonJohnson) %>% separate(index, into = c("year", "quarter")) %>% spread(quarter, value)
ToothGrowth
tk_tbl(JohnsonJohnson) %>%
separate(index, into = c("year", "quarter")) %>%
spread(quarter, value) %>%
select(Q1)
tk_tbl(JohnsonJohnson) %>%
separate(index, into = c("year", "quarter")) %>%
spread(quarter, value) %>%
select(year, Q1)
data <-
tk_tbl(JohnsonJohnson) %>% #переводим формат timeseries в tibble
separate(index, into = c("year", "quarter")) %>% #разбиваем образовавшийся столбец index на 2: год и квартал
spread(quarter, value) %>% #формируем из признака "квартал" столбцы таблицы
select(year, Q1) #выбираем данные за первый квартал
plot(data,
x =  year,
y = Q1,
main  = "Стоимость акций за первый квартал",
sub = "1960 – 1980 годы",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 квартале")
data
plot(data,
x =  year,
y = Q1)
plot(data = data,
x =  year,
y = Q1)
plot(x = data$year,
y = data$Q1)
plot(x = data$year,
y = data$Q1,
main  = "Стоимость акций за первый квартал",
sub = "1960 – 1980 годы",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 квартале")
data <-
tk_tbl(JohnsonJohnson) %>% #переводим формат timeseries в tibble
separate(index, into = c("year", "quarter")) %>% #разбиваем образовавшийся столбец index на 2: год и квартал
spread(quarter, value) %>% #формируем из признака "квартал" столбцы таблицы
select(year, Q1) #выбираем данные за первый квартал
plot(x = data$year,
y = data$Q1,
main  = "Стоимость акций за первый квартал",
sub = "Точечный график",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 квартале")
data <-
tk_tbl(JohnsonJohnson) %>% #переводим формат timeseries в tibble
separate(index, into = c("year", "quarter")) %>% #разбиваем образовавшийся столбец index на 2: год и квартал
spread(quarter, value) %>% #формируем из признака "квартал" столбцы таблицы
select(year, Q1) #выбираем данные за первый квартал
plot(x = data$year,
y = data$Q1,
main  = "Стоимость акций за первый квартал",
sub = "Точечный график",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 квартале",
type = "l")
plot(x = data$year,
y = data$Q1,
main  = "Стоимость акций за первый квартал",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 квартале",
type = "b")
plot(x = data$year,
y = data$Q1,
main  = "Стоимость акций за первый квартал",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 квартале",
type = "c")
plot(x = data$year,
y = data$Q1,
main  = "Стоимость акций за первый квартал",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 квартале",
type = "o")
plot(x = data$year,
y = data$Q1,
main  = "Стоимость акций за первый квартал",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 квартале",
type = "s")
plot(x = data$year,
y = data$Q1,
main  = "Стоимость акций за первый квартал",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 квартале",
type = "n")
install.packages('flair')
Sys.setlocale(locale = "Russian")
plot(x = data$year,
y = data$Q1,
main  = "Стоимость акций за первый квартал",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 квартале",
type = "b")
plot(data$Q1~data$year,
main  = "Стоимость акций за первый квартал",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 квартале",
type = "b")
plot(data$Q1~data$year,
main  = "Стоимость акций за первый и второй квартал",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 и 2 квартале",
type = "o", #строим график "точки на линии"
lwd = 2,
col = 2) #задаем цвет 2
#строим точки за 2 квартал, цвет делаем "lightgreen"
points(data$year, data$Q2, lwd = 2, col = "lightgreen")
#строим линию за 2 квартал, цвет делаем "lightgreen"
lines(data$year, data$Q2, lwd = 2, col = "lightgreen")
data <-
tk_tbl(JohnsonJohnson) %>% #переводим формат timeseries в tibble
separate(index, into = c("year", "quarter")) %>% #разбиваем образовавшийся столбец index на 2: год и квартал
spread(quarter, value) #формируем из признака "квартал" столбцы таблицы
plot(data$Q1~data$year,
main  = "Стоимость акций за первый и второй квартал",
asp = 1,
xlab = "Год",
ylab = "Стоимость акций в 1 и 2 квартале",
type = "o", #строим график "точки на линии"
lwd = 2,
col = 2) #задаем цвет 2
#строим точки за 2 квартал, цвет делаем "lightgreen"
points(data$year, data$Q2, lwd = 2, col = "lightgreen")
#строим линию за 2 квартал, цвет делаем "lightgreen"
lines(data$year, data$Q2, lwd = 2, col = "lightgreen")
plot(data$Q3~data$Q1,
main  = "Зависимость стоимости акций в третьем квартале от первого",
asp = 1)
plot(data$Q3~data$Q1,
main  = "Зависимость стоимости акций в третьем квартале от первого",
asp = 1,
col = 3,
cex = 2)
plot(data$Q3~data$Q1,
main  = "Зависимость стоимости акций в третьем квартале от первого",
asp = 1,
col = 3,
lwd = 2,
cex = 2)
?pch
hist(data$Q1,
col = "lightblue")
data$Q1
hist(data$Q1,
col = "lightblue",
breaks = seq(0, 20 ,1))
hist(data$Q1,
col = "lightblue",
breaks = seq(0, 20, 5))
hist(data$Q1,
col = "lightblue",
breaks = seq(0, 20, 5), freq = FALSE)
hist(data$Q1,
col = "lightblue",
breaks = seq(0, 20, 5),
xlab = "Стоимость акций за 1 квартал каждого года")
barplot(data$Q1)
barplot(data$Q1, names.arg = data$year)
barplot(data$Q1, names.arg = data$year, horiz = TRUE)
barplot(data$Q1, names.arg = data$year, horiz = TRUE, las = 1)
barplot(data$Q1, #строим barplot по стоимости акций за 1 квартал каждого года
names.arg = data$year, #в качестве подписей выбираем год
horiz = TRUE, #делаем горизонтальную ориентацию
las = 1, #делаем подписи года строго горизонтальными, чтобы они влезли в график
main = "Стоимость акций за 1 квартал каждого года",
xlab = "Стоимость акций")
barplot(data$Q1, #строим barplot по стоимости акций за 1 квартал каждого года
names.arg = data$year, #в качестве подписей выбираем год
horiz = TRUE, #делаем горизонтальную ориентацию
las = 1, #делаем подписи года строго горизонтальными, чтобы они влезли в график
main = "Стоимость акций за 1 квартал каждого года",
xlab = "Стоимость акций",
col = "pink")
barplot(data$Q1, #строим barplot по стоимости акций за 1 квартал каждого года
names.arg = data$year, #в качестве подписей выбираем год
horiz = TRUE, #делаем горизонтальную ориентацию
las = 1, #делаем подписи года строго горизонтальными, чтобы они влезли в график
main = "Стоимость акций за 1 квартал каждого года",
xlab = "Стоимость акций",
col = 5)
barplot(data$Q1, #строим barplot по стоимости акций за 1 квартал каждого года
names.arg = data$year, #в качестве подписей выбираем год
horiz = TRUE, #делаем горизонтальную ориентацию
las = 1, #делаем подписи года строго горизонтальными, чтобы они влезли в график
main = "Стоимость акций за 1 квартал каждого года",
xlab = "Стоимость акций",
col = 6)
barplot(data$Q1, #строим barplot по стоимости акций за 1 квартал каждого года
names.arg = data$year, #в качестве подписей выбираем год
horiz = TRUE, #делаем горизонтальную ориентацию
las = 1, #делаем подписи года строго горизонтальными, чтобы они влезли в график
main = "Стоимость акций за 1 квартал каждого года",
xlab = "Стоимость акций",
col = 7)
pie(data$Q1)
pie(floor(data$Q1))
floor(data$Q1)
floor(data$Q1, names)
pie(floor(data$Q1), names)
pie(floor(data$Q1), floor(data$Q1))
barplot(data$Q1, #строим barplot по стоимости акций за 1 квартал каждого года
names.arg = data$year, #в качестве подписей выбираем год
horiz = TRUE, #делаем горизонтальную ориентацию
las = 1, #делаем подписи года строго горизонтальными, чтобы они влезли в график
main = "Стоимость акций за 1 квартал каждого года",
xlab = "Стоимость акций",
col = 7, )
barplot(data$Q1, #строим barplot по стоимости акций за 1 квартал каждого года
names.arg = data$year, #в качестве подписей выбираем год
horiz = TRUE, #делаем горизонтальную ориентацию
las = 1, #делаем подписи года строго горизонтальными, чтобы они влезли в график
main = "Стоимость акций за 1 квартал каждого года",
xlab = "Стоимость акций",
col = 7, )
barplot(data$Q1, #строим barplot по стоимости акций за 1 квартал каждого года
names.arg = data$year, #в качестве подписей выбираем год
horiz = TRUE, #делаем горизонтальную ориентацию
las = 1, #делаем подписи года строго горизонтальными, чтобы они влезли в график
main = "Стоимость акций за 1 квартал каждого года",
xlab = "Стоимость акций",
col = 7, alpha = 0.3)
sample(-5, 5, 1)
sample(-5:5, 1)
for(apple in 1:5){
print("Плюс 1!")
}
print(paste("Я насчитал ", apple, " яблок!"))
4%%2
4%%5
4%/%5
vec <- 1:10
for(i in vec){
if(i%%2 == 0){
print(paste(i, " - четное число"))
}else{
print(paste(i, " - нечетное число"))
}
}
i = 1
i += 1
i =+ 1
i
i
i =+ 1
i
i++
i = 1
while(vec[i] != 8){
print("Пока еще не дошли до 8Б сейчас на", vec[i])
i = i + 1
}
i = 1
while(vec[i] != 8){
print(paste("Пока еще не дошли до 8 сейчас на", vec[i]))
i = i + 1
}
i = 1
while(TRUE){
vec[i] == 5
print(i)
i = i + 1
}
i = 1
while(FALSE){
return(vec[i] == 5)
print(i)
i = i + 1
}
i
c(1,2,3)**2
library(bookdown)
dkjbndfbnrbnho
JonsonJonson
JohnsonJohnson
str(JohnsonJohnson)
is.numeric(2)
is.numeric(3.5)
is.numeric(3)
x <- 1:5
which(x == 3)
x
?read.table
install.packages("xlsx")
square <- function(x){
res <- x**2
return(res)
}
square(c(1,3,5))
5**2
data(cars)
library(dplyr)
cars %>% summarise_all(list(mean))
cars %>% summarise_all(list(mean)) %>% summarise_all(function(x)x**3)
data("JohnsonJohnson")
JohnsonJohnson
str(JohnsonJohnson)
library(timetk)
library(tidyr)
tk_tbl(JohnsonJohnson)
tk_tbl(JohnsonJohnson) %>% separate(index, into = c("year", "quarter"))
tk_tbl(JohnsonJohnson) %>% separate(index, into = c("year", "quarter")) %>% spread(quarter, value)
